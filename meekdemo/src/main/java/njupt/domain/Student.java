package njupt.domain;

import java.io.Serializable;

public class Student implements Serializable {

	public Student() {
		super();
	}

	public Student(Integer id, String stuId, String password, String name,
			Integer age, String gender, String photopath, String access) {
		super();
		this.id = id;
		this.stuId = stuId;
		this.password = password;
		this.name = name;
		this.age = age;
		this.gender = gender;
		this.photopath = photopath;
		this.access = access;
	}
	private Integer id;

	private String stuId;

	private String password;

	private String name;

	private Integer age;

	private String gender;

	private String photopath = "/upload/girl.jpg";

	private String access = "notAdmin";

	private static final long serialVersionUID = 1L;

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getstuId() {
		return stuId;
	}

	public void setstuId(String stuId) {
		this.stuId = stuId == null ? null : stuId.trim();
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password == null ? null : password.trim();
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name == null ? null : name.trim();
	}

	public Integer getAge() {
		return age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender == null ? null : gender.trim();
	}

	public String getPhotopath() {
		return photopath;
	}

	public void setPhotopath(String photopath) {
		this.photopath = photopath == null ? null : photopath.trim();
	}

	public String getAccess() {
		return access;
	}

	public void setAccess(String access) {
		this.access = access == null ? null : access.trim();
	}

	@Override
	public boolean equals(Object that) {
		if (this == that) {
			return true;
		}
		if (that == null) {
			return false;
		}
		if (getClass() != that.getClass()) {
			return false;
		}
		Student other = (Student) that;
		return (this.getId() == null ? other.getId() == null : this.getId()
				.equals(other.getId()))
				&& (this.getstuId() == null ? other.getstuId() == null : this
						.getstuId().equals(other.getstuId()))
				&& (this.getPassword() == null ? other.getPassword() == null
						: this.getPassword().equals(other.getPassword()))
				&& (this.getName() == null ? other.getName() == null : this
						.getName().equals(other.getName()))
				&& (this.getAge() == null ? other.getAge() == null : this
						.getAge().equals(other.getAge()))
				&& (this.getGender() == null ? other.getGender() == null : this
						.getGender().equals(other.getGender()))
				&& (this.getPhotopath() == null ? other.getPhotopath() == null
						: this.getPhotopath().equals(other.getPhotopath()))
				&& (this.getAccess() == null ? other.getAccess() == null : this
						.getAccess().equals(other.getAccess()));
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		result = prime * result
				+ ((getstuId() == null) ? 0 : getstuId().hashCode());
		result = prime * result
				+ ((getPassword() == null) ? 0 : getPassword().hashCode());
		result = prime * result
				+ ((getName() == null) ? 0 : getName().hashCode());
		result = prime * result
				+ ((getAge() == null) ? 0 : getAge().hashCode());
		result = prime * result
				+ ((getGender() == null) ? 0 : getGender().hashCode());
		result = prime * result
				+ ((getPhotopath() == null) ? 0 : getPhotopath().hashCode());
		result = prime * result
				+ ((getAccess() == null) ? 0 : getAccess().hashCode());
		return result;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table student
	 *
	 * @mbggenerated Sat Apr 28 00:32:24 CST 2018
	 */
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(getClass().getSimpleName());
		sb.append(" [");
		sb.append("Hash = ").append(hashCode());
		sb.append(", id=").append(id);
		sb.append(", stuId=").append(stuId);
		sb.append(", password=").append(password);
		sb.append(", name=").append(name);
		sb.append(", age=").append(age);
		sb.append(", gender=").append(gender);
		sb.append(", photopath=").append(photopath);
		sb.append(", access=").append(access);
		sb.append(", serialVersionUID=").append(serialVersionUID);
		sb.append("]");
		return sb.toString();
	}
}