<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="njupt.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="njupt.domain.Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="stuId" property="stuId" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="photoPath" property="photopath" jdbcType="VARCHAR"/>
        <result column="access" property="access" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		id, stuId, password, name, age, gender, photoPath, access
	</sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="njupt.domain.StudentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectBystuId" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from student
        where stuId = #{stuId,jdbcType=VARCHAR}
    </select>

    <select id="findAll" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from student
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from student
		where id = #{id,jdbcType=INTEGER}
	</delete>

    <delete id="deleteBystuId" parameterType="java.lang.String">
		delete from student
		where stuId = #{stuId,jdbcType=VARCHAR}
	</delete>

    <delete id="deleteByPrimaryKeys" parameterType="java.lang.Integer">
        DELETE FROM student WHERE id IN
        <foreach collection="array" item="id" open="(" close=")"
                 separator=",">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>

    <delete id="deleteByExample" parameterType="njupt.domain.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="njupt.domain.Student"
            keyProperty="id" useGeneratedKeys="true">
		insert into student (id, stuId, password,
		name, age, gender,
		photoPath, access)
		values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR},
		#{photopath,jdbcType=VARCHAR}, #{access,jdbcType=VARCHAR})
	</insert>
    <insert id="insertSelective" parameterType="njupt.domain.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="stuId != null">
                stuId,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="photopath != null">
                photoPath,
            </if>
            <if test="access != null">
                access,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="stuId != null">
                #{stuId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="photopath != null">
                #{photopath,jdbcType=VARCHAR},
            </if>
            <if test="access != null">
                #{access,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="njupt.domain.StudentExample"
            resultType="java.lang.Integer">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">

        update student
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.stuId != null">
                stuId = #{record.stuId,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=VARCHAR},
            </if>
            <if test="record.photopath != null">
                photoPath = #{record.photopath,jdbcType=VARCHAR},
            </if>
            <if test="record.access != null">
                access = #{record.access,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map" keyProperty="id"
            useGeneratedKeys="true">
        update student
        set id = #{record.id,jdbcType=INTEGER},
        stuId = #{record.stuId,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        gender = #{record.gender,jdbcType=VARCHAR},
        photoPath = #{record.photopath,jdbcType=VARCHAR},
        access = #{record.access,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="njupt.domain.Student">
        update student
        <set>
            <if test="stuId != null">
                stuId = #{stuId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="photopath != null">
                photoPath = #{photopath,jdbcType=VARCHAR},
            </if>
            <if test="access != null">
                access = #{access,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="njupt.domain.Student">
		update student
		set stuId = #{stuId,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		gender = #{gender,jdbcType=VARCHAR},
		photoPath = #{photopath,jdbcType=VARCHAR},
		access = #{access,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>